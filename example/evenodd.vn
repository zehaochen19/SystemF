let evenodd : (Nat → Bool, Nat → Bool) =
  fix (λ eo  .
    let e = λ n . natcase n { 0 → True, S x → eo.2 x } in
    let o = λ n . natcase n { 0 → False, S x → eo.1 x } in
    (e, o))
in

let even = evenodd.1 in
let odd = evenodd.2 in

let five = S(S(S(S(S(0))))) in

(even five, odd five)
